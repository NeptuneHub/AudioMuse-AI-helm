apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "audiomuse-ai.fullname" . }}-worker
  namespace: {{ .Release.Namespace }} # Use .Release.Namespace
  labels:
    {{- include "audiomuse-ai.labels" . | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "audiomuse-ai.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "audiomuse-ai.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: worker
    spec:
      # Best Practice: Run as a non-root user for enhanced security.
      # The Docker image must be built to support this (e.g., by creating user 1001 and setting permissions).
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: rq-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SERVICE_TYPE
              value: "worker"
            # Environment variables from values.yaml
            - name: JELLYFIN_URL
              value: {{ .Values.jellyfin.url | quote }}
            - name: OLLAMA_SERVER_URL
              value: {{ .Values.config.ollamaServerUrl | quote }}
            - name: POSTGRES_HOST
              value: {{ printf "%s-postgres" (include "audiomuse-ai.fullname" .) }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.service.port | quote }}
            - name: REDIS_URL
              value: {{ printf "redis://%s-redis:%d/0" (include "audiomuse-ai.fullname" .) .Values.redis.service.port | quote }}
            - name: TEMP_DIR
              value: {{ .Values.config.tempDir | quote }}
            - name: JELLYFIN_USER_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiomuse-ai.fullname" . }}-jellyfin
                  key: user_id
            - name: JELLYFIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiomuse-ai.fullname" . }}-jellyfin
                  key: api_token
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiomuse-ai.fullname" . }}-postgres
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiomuse-ai.fullname" . }}-postgres
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiomuse-ai.fullname" . }}-postgres
                  key: POSTGRES_DB
            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiomuse-ai.fullname" . }}-gemini
                  key: GEMINI_API_KEY
            - name: AI_CHAT_DB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "audiomuse-ai.fullname" . }}-ai-chat-db
                  key: AI_CHAT_DB_USER_PASSWORD
            - name: CLUSTER_ALGORITHM
              value: {{ .Values.config.clusterAlgorithm | quote }}
            - name: AI_MODEL_PROVIDER
              value: {{ .Values.config.aiModelProvider | quote }}
            - name: OLLAMA_MODEL_NAME
              value: {{ .Values.config.ollamaModelName | quote }}
            - name: GEMINI_MODEL_NAME
              value: {{ .Values.config.geminiModelName | quote }}
            - name: AI_CHAT_DB_USER_NAME
              value: {{ .Values.config.aiChatDbUserName | quote }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          volumeMounts:
            - name: app-temp-audio
              mountPath: /app/temp_audio
      volumes:
        - name: app-temp-audio
          emptyDir: {}
